{"version":3,"sources":["App.js","actions.js","reducer.js","store.js","index.js"],"names":["App","toDos","useSelector","state","dispatch","useDispatch","useState","description","setDescription","inputRef","useRef","useEffect","current","focus","Container","maxWidth","className","align","onSubmit","e","preventDefault","type","payload","addTodo","handleSubmit","FormGroup","TextField","value","onChange","target","variant","fullWidth","label","sx","margin","required","focused","Button","List","length","map","todo","ListItem","disablePadding","onClick","id","ListItemButton","ListItemText","primary","secondary","resolved","secondaryTypographyProps","color","IconButton","size","lastCount","middleware","thunk","store","createStore","action","sort","a","b","filter","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA4FeA,MA5Ef,WACE,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,KAC/BC,EAAWC,cACjB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAQMC,EAAWC,mBAMjB,OAJAC,qBAAU,WACRF,EAASG,QAAQC,UAChB,IAGD,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,qBAAKC,UAAU,MAAf,SACE,eAACF,EAAA,EAAD,CAAWC,SAAS,KAAKE,MAAM,SAA/B,UACE,sBAAMC,SAAU,SAACC,GAAD,OAhBH,SAACA,GACpBA,EAAEC,iBACFhB,ECvBmB,SAACG,GACtB,MAAO,CAAEc,KAAM,WAAYC,QAAS,CAAEf,gBDsB3BgB,CAAQhB,IACjBC,EAAe,IAacgB,CAAaL,IAApC,SACE,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEjB,SAAUA,EACVkB,MAAOpB,EACPqB,SAAU,SAACT,GAAD,OAAOX,EAAeW,EAAEU,OAAOF,QACzCG,QAAQ,WACRC,WAAS,EACTC,MAAM,WACNC,GAAI,CAAEC,OAAQ,SACdC,UAAQ,EACRC,SAAO,IAET,cAACC,EAAA,EAAD,CAAQpB,MAAM,QAAQI,KAAK,SAASS,QAAQ,YAA5C,2BAKJ,cAACQ,EAAA,EAAD,UACGrC,EAAMsC,OAAS,EACdtC,EAAMuC,KAAI,SAACC,GAAD,OACR,eAACC,EAAA,EAAD,CACEC,gBAAc,EAEdC,QAAS,kBAAMxC,ECxDxB,CAAEiB,KAAM,cAAeC,QAAS,CAAEuB,GDwDUJ,EAAKI,OAH1C,UAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAASP,EAAKlC,YACd0C,UAAWR,EAAKS,SAAW,WAAa,eACxCC,yBACGV,EAAKS,SAAgC,CAAEE,MAAO,SAA9B,CAAEA,MAAO,aAIhC,cAACC,EAAA,EAAD,CACEC,KAAK,QACLxB,QAAQ,YACRsB,MAAM,UACNR,QAAS,kBAAMxC,ECnE1B,CAAEiB,KAAM,cAAeC,QAAS,CAAEuB,GDmEYJ,EAAKI,OAJ1C,SAME,cAAC,IAAD,QAlBGJ,EAAKI,OAuBd,+D,wCEnFVU,EAAY,ECKhB,IAOMC,EAAa,CAACC,KAEdC,EAAQC,uBDZC,WAAsC,IAArBxD,EAAoB,uDAAZ,GAAIyD,EAAQ,uCAClD,OAAQA,EAAOvC,MACb,IAAK,WACH,MAAM,CACJ,CACEwB,KAAMU,EACNhD,YAAaqD,EAAOtC,QAAQf,YAC5B2C,UAAU,IAJd,mBAMK/C,IAEP,IAAK,cACH,OAAOA,EACJqC,KAAI,SAACC,GAAD,OACHA,EAAKI,KAAOe,EAAOtC,QAAQuB,GACvBJ,EADJ,2BAESA,GAFT,IAEeS,UAAWT,EAAKS,cAEhCW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,SAAWa,EAAEb,YACnC,IAAK,cACH,OAAO/C,EAAM6D,QAAO,SAACvB,GAAD,OAAUA,EAAKI,KAAOe,EAAOtC,QAAQuB,MAC3D,QACE,OAAO1C,KCnBQ,CACnB,CAAE0C,GAAI,EAAGtC,YAAa,OAAQ2C,UAAU,GACxC,CAAEL,GAAI,EAAGtC,YAAa,MAAO2C,UAAU,GACvC,CAAEL,GAAI,EAAGtC,YAAa,YAAa2C,UAAU,GAC7C,CAAEL,GAAI,EAAGtC,YAAa,OAAQ2C,UAAU,IAQxCe,8BAAoBC,kBAAe,WAAf,EAAmBV,KAG1BE,ICdfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJY,SAASC,eAAe,W","file":"static/js/main.cbe8e64c.chunk.js","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { addTodo, removeTodo, updateTodo } from \"./actions\";\nimport { useState, useEffect, useRef } from \"react\";\nimport {\n  TextField,\n  Button,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  FormGroup,\n  IconButton,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nfunction App() {\n  const toDos = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTodo(description));\n    setDescription(\"\");\n  };\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  return (\n    <Container maxWidth=\"md\">\n      <div className=\"App\">\n        <Container maxWidth=\"sm\" align=\"center\">\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <FormGroup>\n              <TextField\n                inputRef={inputRef}\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                variant=\"outlined\"\n                fullWidth\n                label=\"Add ToDo\"\n                sx={{ margin: \"5px 0\" }}\n                required\n                focused\n              />\n              <Button align=\"right\" type=\"submit\" variant=\"contained\">\n                Add Todo\n              </Button>\n            </FormGroup>\n          </form>\n          <List>\n            {toDos.length > 0 ? (\n              toDos.map((todo) => (\n                <ListItem\n                  disablePadding\n                  key={todo.id}\n                  onClick={() => dispatch(updateTodo(todo.id))}\n                >\n                  <ListItemButton>\n                    <ListItemText\n                      primary={todo.description}\n                      secondary={todo.resolved ? \"Resolved\" : \"Not Resolved\"}\n                      secondaryTypographyProps={\n                        !todo.resolved ? { color: \"error\" } : { color: \"green\" }\n                      }\n                    />\n                  </ListItemButton>\n                  <IconButton\n                    size=\"small\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => dispatch(removeTodo(todo.id))}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItem>\n              ))\n            ) : (\n              <span>there is no toDos</span>\n            )}\n          </List>\n        </Container>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","export const addTodo = (description) => {\r\n  return { type: \"ADD_TODO\", payload: { description } };\r\n};\r\n\r\nexport const updateTodo = (id) => {\r\n  return { type: \"UPDATE_TODO\", payload: { id } };\r\n};\r\n\r\nexport const removeTodo = (id) => {\r\n  return { type: \"REMOVE_TODO\", payload: { id } };\r\n};\r\n","let lastCount = 3;\r\n\r\nexport default function reducer(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [\r\n        {\r\n          id: ++lastCount,\r\n          description: action.payload.description,\r\n          resolved: false,\r\n        },\r\n        ...state,\r\n      ];\r\n    case \"UPDATE_TODO\":\r\n      return state\r\n        .map((todo) =>\r\n          todo.id !== action.payload.id\r\n            ? todo\r\n            : { ...todo, resolved: !todo.resolved }\r\n        )\r\n        .sort((a, b) => a.resolved - b.resolved);\r\n    case \"REMOVE_TODO\":\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst initialState = [\r\n  { id: 0, description: \"PRAY\", resolved: false },\r\n  { id: 1, description: \"Gym\", resolved: false },\r\n  { id: 2, description: \"Breakfast\", resolved: false },\r\n  { id: 3, description: \"Code\", resolved: false },\r\n];\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}